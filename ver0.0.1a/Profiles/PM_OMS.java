package au.com.langdale.cimtool.generated;
import javax.persistence.*;
/**
 * Annotated java for PM_OMS_Profile
 * Generated by CIMTool http://cimtool.org
 */
public class PM_OMS_Profile
{
    /**
     * Records activity for an entity at a point in time; activity may be for
     * an event that has already occurred or for a planned activity.
     */
    @Entity
    @Table(name="\"ActivityRecord\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class ActivityRecord
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * The aliasName is free text human readable name of the object alternative
         * to IdentifiedObject.name. It may be non unique and may not correlate to
         * a naming hierarchy.
         * The attribute aliasName is retained because of backwards compatibility
         * between CIM relases. It is however recommended to replace aliasName with
         * the Name class as aliasName is planned for retirement at a future time.
         */
        public String getAliasName () { return aliasName; }
        public void setAliasName ( String aliasName ) { this.aliasName = aliasName; }
        @Basic()
        @Column(name="\"aliasName\"")
        private String aliasName ;
         
        /**
         * Date and time this activity record has been created (different from the
         * 'status.dateTime', which is the time of a status change of the associated
         * object, if applicable).
         */
        public String getCreatedDateTime () { return createdDateTime; }
        public void setCreatedDateTime ( String createdDateTime ) { this.createdDateTime = createdDateTime; }
        @Basic()
        @Column(name="\"createdDateTime\"")
        private String createdDateTime ;
         
        /**
         * The description is a free human readable text describing or naming the
         * object. It may be non unique and may not correlate to a naming hierarchy.
         */
        public String getDescription () { return description; }
        public void setDescription ( String description ) { this.description = description; }
        @Basic()
        @Column(name="\"description\"")
        private String description ;
         
        /**
         * The name is any free human readable and possibly non unique text naming
         * the object.
         */
        public String getName () { return name; }
        public void setName ( String name ) { this.name = name; }
        @Basic()
        @Column(name="\"name\"")
        private String name ;
         
        /**
         * Reason for event resulting in this activity record, typically supplied
         * when user initiated.
         */
        public String getReason () { return reason; }
        public void setReason ( String reason ) { this.reason = reason; }
        @Basic()
        @Column(name="\"reason\"")
        private String reason ;
         
        /**
         * Severity level of event resulting in this activity record.
         */
        public String getSeverity () { return severity; }
        public void setSeverity ( String severity ) { this.severity = severity; }
        @Basic()
        @Column(name="\"severity\"")
        private String severity ;
         
        /**
         * Type of event resulting in this activity record.
         */
        public String getType () { return type; }
        public void setType ( String type ) { this.type = type; }
        @Basic()
        @Column(name="\"type\"")
        private String type ;
         
        /**
         * Information on consequence of event resulting in this activity record.
         */
        public Status getStatus () { return status; }
        public void setStatus ( Status status ) { this.status = status; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"status\"")
        private Status status ;
         
    }
    /**
     * Compatible unit for various types of WorkEquipmentAssets, including vehicles.
     */
    @Entity
    @Table(name="\"CUWorkEquipmentItem\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class CUWorkEquipmentItem
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * The equipment type code.
         */
        public String getEquipCode () { return equipCode; }
        public void setEquipCode ( String equipCode ) { this.equipCode = equipCode; }
        @Basic()
        @Column(name="\"equipCode\"")
        private String equipCode ;
         
        /**
         * Standard usage rate for the type of vehicle.
         */
        public Double getRate () { return rate; }
        public void setRate ( Double rate ) { this.rate = rate; }
        @Basic()
        @Column(name="\"rate\"")
        private Double rate ;
         
        /**
         */
        public Status getStatus () { return status; }
        public void setStatus ( Status status ) { this.status = status; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"status\"")
        private Status status ;
         
        /**
         */
        public WorkAsset getTypeAsset () { return typeAsset; }
        public void setTypeAsset ( WorkAsset typeAsset ) { this.typeAsset = typeAsset; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"TypeAsset\"")
        private WorkAsset typeAsset ;
         
    }
    /**
     * Transmits an outage plan to a crew in order for the planned outage to be
     * executed.
     */
    @Entity
    @Table(name="\"OutageOrder\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class OutageOrder
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * Name of the author of this document.
         */
        public String getAuthorName () { return authorName; }
        public void setAuthorName ( String authorName ) { this.authorName = authorName; }
        @Basic()
        @Column(name="\"authorName\"")
        private String authorName ;
         
        /**
         * Free text comment.
         */
        public String getComment () { return comment; }
        public void setComment ( String comment ) { this.comment = comment; }
        @Basic()
        @Column(name="\"comment\"")
        private String comment ;
         
        /**
         * Free-form comment associated with the outage order
         */
        public String getComment () { return comment; }
        public void setComment ( String comment ) { this.comment = comment; }
        @Basic()
        @Column(name="\"comment\"")
        private String comment ;
         
        /**
         * Date and time that this document was created.
         */
        public String getCreatedDateTime () { return createdDateTime; }
        public void setCreatedDateTime ( String createdDateTime ) { this.createdDateTime = createdDateTime; }
        @Basic()
        @Column(name="\"createdDateTime\"")
        private String createdDateTime ;
         
        /**
         * Date and time this document was last modified. Documents may potentially
         * be modified many times during their lifetime.
         */
        public String getLastModifiedDateTime () { return lastModifiedDateTime; }
        public void setLastModifiedDateTime ( String lastModifiedDateTime ) { this.lastModifiedDateTime = lastModifiedDateTime; }
        @Basic()
        @Column(name="\"lastModifiedDateTime\"")
        private String lastModifiedDateTime ;
         
        /**
         * Revision number for this document.
         */
        public String getRevisionNumber () { return revisionNumber; }
        public void setRevisionNumber ( String revisionNumber ) { this.revisionNumber = revisionNumber; }
        @Basic()
        @Column(name="\"revisionNumber\"")
        private String revisionNumber ;
         
        /**
         * Document subject.
         */
        public String getSubject () { return subject; }
        public void setSubject ( String subject ) { this.subject = subject; }
        @Basic()
        @Column(name="\"subject\"")
        private String subject ;
         
        /**
         * Document title.
         */
        public String getTitle () { return title; }
        public void setTitle ( String title ) { this.title = title; }
        @Basic()
        @Column(name="\"title\"")
        private String title ;
         
        /**
         * Utility-specific classification of this document, according to its corporate
         * standards, practices, and existing IT systems (e.g., for management of
         * assets, maintenance, work, outage, customers, etc.).
         */
        public String getType () { return type; }
        public void setType ( String type ) { this.type = type; }
        @Basic()
        @Column(name="\"type\"")
        private String type ;
         
        /**
         * The outage plan that is defined to address the outage order.
         */
        public OutagePlan getOutagePlan () { return outagePlan; }
        public void setOutagePlan ( OutagePlan outagePlan ) { this.outagePlan = outagePlan; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"OutagePlan\"")
        private OutagePlan outagePlan ;
         
    }
    /**
     * Document containing the definition of planned outages of equipment and/or
     * usage points. It will reference switching plans that are used to execute
     * the planned outage.
     */
    @Entity
    @Table(name="\"OutagePlan\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class OutagePlan
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * The aliasName is free text human readable name of the object alternative
         * to IdentifiedObject.name. It may be non unique and may not correlate to
         * a naming hierarchy.
         * The attribute aliasName is retained because of backwards compatibility
         * between CIM relases. It is however recommended to replace aliasName with
         * the Name class as aliasName is planned for retirement at a future time.
         */
        public String getAliasName () { return aliasName; }
        public void setAliasName ( String aliasName ) { this.aliasName = aliasName; }
        @Basic()
        @Column(name="\"aliasName\"")
        private String aliasName ;
         
        /**
         * The date and time the outage plan was approved
         */
        public String getApprovedDateTime () { return approvedDateTime; }
        public void setApprovedDateTime ( String approvedDateTime ) { this.approvedDateTime = approvedDateTime; }
        @Basic()
        @Column(name="\"approvedDateTime\"")
        private String approvedDateTime ;
         
        /**
         * Name of the author of this document.
         */
        public String getAuthorName () { return authorName; }
        public void setAuthorName ( String authorName ) { this.authorName = authorName; }
        @Basic()
        @Column(name="\"authorName\"")
        private String authorName ;
         
        /**
         * Date and Time the planned outage was canceled.
         */
        public String getCancelledDateTime () { return cancelledDateTime; }
        public void setCancelledDateTime ( String cancelledDateTime ) { this.cancelledDateTime = cancelledDateTime; }
        @Basic()
        @Column(name="\"cancelledDateTime\"")
        private String cancelledDateTime ;
         
        /**
         * Free text comment.
         */
        public String getComment () { return comment; }
        public void setComment ( String comment ) { this.comment = comment; }
        @Basic()
        @Column(name="\"comment\"")
        private String comment ;
         
        /**
         * Date and time that this document was created.
         */
        public String getCreatedDateTime () { return createdDateTime; }
        public void setCreatedDateTime ( String createdDateTime ) { this.createdDateTime = createdDateTime; }
        @Basic()
        @Column(name="\"createdDateTime\"")
        private String createdDateTime ;
         
        /**
         * The description is a free human readable text describing or naming the
         * object. It may be non unique and may not correlate to a naming hierarchy.
         */
        public String getDescription () { return description; }
        public void setDescription ( String description ) { this.description = description; }
        @Basic()
        @Column(name="\"description\"")
        private String description ;
         
        /**
         * Date and time this document was last modified. Documents may potentially
         * be modified many times during their lifetime.
         */
        public String getLastModifiedDateTime () { return lastModifiedDateTime; }
        public void setLastModifiedDateTime ( String lastModifiedDateTime ) { this.lastModifiedDateTime = lastModifiedDateTime; }
        @Basic()
        @Column(name="\"lastModifiedDateTime\"")
        private String lastModifiedDateTime ;
         
        /**
         * The name is any free human readable and possibly non unique text naming
         * the object.
         */
        public String getName () { return name; }
        public void setName ( String name ) { this.name = name; }
        @Basic()
        @Column(name="\"name\"")
        private String name ;
         
        /**
         * Purpose of this outage plan, such as whether it is to replace equipment
         * or perform maintenance or repairs or to reconfigure network topology.
         */
        public String getPurpose () { return purpose; }
        public void setPurpose ( String purpose ) { this.purpose = purpose; }
        @Basic()
        @Column(name="\"purpose\"")
        private String purpose ;
         
        /**
         * Revision number for this document.
         */
        public String getRevisionNumber () { return revisionNumber; }
        public void setRevisionNumber ( String revisionNumber ) { this.revisionNumber = revisionNumber; }
        @Basic()
        @Column(name="\"revisionNumber\"")
        private String revisionNumber ;
         
        /**
         * Document subject.
         */
        public String getSubject () { return subject; }
        public void setSubject ( String subject ) { this.subject = subject; }
        @Basic()
        @Column(name="\"subject\"")
        private String subject ;
         
        /**
         * Document title.
         */
        public String getTitle () { return title; }
        public void setTitle ( String title ) { this.title = title; }
        @Basic()
        @Column(name="\"title\"")
        private String title ;
         
        /**
         * Utility-specific classification of this document, according to its corporate
         * standards, practices, and existing IT systems (e.g., for management of
         * assets, maintenance, work, outage, customers, etc.).
         */
        public String getType () { return type; }
        public void setType ( String type ) { this.type = type; }
        @Basic()
        @Column(name="\"type\"")
        private String type ;
         
        /**
         * The outage resulting from the execution of the outage plan.
         */
        public PlannedOutage getPlannedOutage () { return plannedOutage; }
        public void setPlannedOutage ( PlannedOutage plannedOutage ) { this.plannedOutage = plannedOutage; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"PlannedOutage\"")
        private PlannedOutage plannedOutage ;
         
    }
    /**
     */
    @Entity
    @Table(name="\"PlannedOutage\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class PlannedOutage
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * The aliasName is free text human readable name of the object alternative
         * to IdentifiedObject.name. It may be non unique and may not correlate to
         * a naming hierarchy.
         * The attribute aliasName is retained because of backwards compatibility
         * between CIM relases. It is however recommended to replace aliasName with
         * the Name class as aliasName is planned for retirement at a future time.
         */
        public String getAliasName () { return aliasName; }
        public void setAliasName ( String aliasName ) { this.aliasName = aliasName; }
        @Basic()
        @Column(name="\"aliasName\"")
        private String aliasName ;
         
        /**
         * Name of the author of this document.
         */
        public String getAuthorName () { return authorName; }
        public void setAuthorName ( String authorName ) { this.authorName = authorName; }
        @Basic()
        @Column(name="\"authorName\"")
        private String authorName ;
         
        /**
         * Free text comment.
         */
        public String getComment () { return comment; }
        public void setComment ( String comment ) { this.comment = comment; }
        @Basic()
        @Column(name="\"comment\"")
        private String comment ;
         
        /**
         * a name to denote the community - this could be a name or a code of some
         * kind.
         */
        public String getCommunityDescriptor () { return communityDescriptor; }
        public void setCommunityDescriptor ( String communityDescriptor ) { this.communityDescriptor = communityDescriptor; }
        @Basic()
        @Column(name="\"communityDescriptor\"")
        private String communityDescriptor ;
         
        /**
         * Date and time that this document was created.
         */
        public String getCreatedDateTime () { return createdDateTime; }
        public void setCreatedDateTime ( String createdDateTime ) { this.createdDateTime = createdDateTime; }
        @Basic()
        @Column(name="\"createdDateTime\"")
        private String createdDateTime ;
         
        /**
         * number of customers that have been restored in the area.
         */
        public Integer getCustomersRestored () { return customersRestored; }
        public void setCustomersRestored ( Integer customersRestored ) { this.customersRestored = customersRestored; }
        @Basic()
        @Column(name="\"customersRestored\"")
        private Integer customersRestored ;
         
        /**
         * The description is a free human readable text describing or naming the
         * object. It may be non unique and may not correlate to a naming hierarchy.
         */
        public String getDescription () { return description; }
        public void setDescription ( String description ) { this.description = description; }
        @Basic()
        @Column(name="\"description\"")
        private String description ;
         
        /**
         * Date and time this document was last modified. Documents may potentially
         * be modified many times during their lifetime.
         */
        public String getLastModifiedDateTime () { return lastModifiedDateTime; }
        public void setLastModifiedDateTime ( String lastModifiedDateTime ) { this.lastModifiedDateTime = lastModifiedDateTime; }
        @Basic()
        @Column(name="\"lastModifiedDateTime\"")
        private String lastModifiedDateTime ;
         
        /**
         * The updated number of meters affected by the outage as reported by the
         * OMS within the utility. It is assumed this number will be updated repeatedly
         * until the full outage is resolved.
         */
        public Integer getMetersAffected () { return metersAffected; }
        public void setMetersAffected ( Integer metersAffected ) { this.metersAffected = metersAffected; }
        @Basic()
        @Column(name="\"metersAffected\"")
        private Integer metersAffected ;
         
        /**
         * The name is any free human readable and possibly non unique text naming
         * the object.
         */
        public String getName () { return name; }
        public void setName ( String name ) { this.name = name; }
        @Basic()
        @Column(name="\"name\"")
        private String name ;
         
        /**
         * the total number of customers that are served in the area (both outaged
         * and not outaged).
         */
        public Integer getOriginalCustomersServed () { return originalCustomersServed; }
        public void setOriginalCustomersServed ( Integer originalCustomersServed ) { this.originalCustomersServed = originalCustomersServed; }
        @Basic()
        @Column(name="\"originalCustomersServed\"")
        private Integer originalCustomersServed ;
         
        /**
         * The original number of meters that were affected as reported by the OMS
         * within the utility. That is, this is the total number of meters that were
         * out at the beginning of the outage.
         */
        public Integer getOriginalMetersAffected () { return originalMetersAffected; }
        public void setOriginalMetersAffected ( Integer originalMetersAffected ) { this.originalMetersAffected = originalMetersAffected; }
        @Basic()
        @Column(name="\"originalMetersAffected\"")
        private Integer originalMetersAffected ;
         
        /**
         * Defines if the outage has been verified or is only estimated
         */
        public OutageStatusKind getOutageKind () { return outageKind; }
        public void setOutageKind ( OutageStatusKind outageKind ) { this.outageKind = outageKind; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"outageKind\"")
        private OutageStatusKind outageKind ;
         
        /**
         * The reason for the planned outage.
         */
        public String getReason () { return reason; }
        public void setReason ( String reason ) { this.reason = reason; }
        @Basic()
        @Column(name="\"reason\"")
        private String reason ;
         
        /**
         * Revision number for this document.
         */
        public String getRevisionNumber () { return revisionNumber; }
        public void setRevisionNumber ( String revisionNumber ) { this.revisionNumber = revisionNumber; }
        @Basic()
        @Column(name="\"revisionNumber\"")
        private String revisionNumber ;
         
        /**
         * defines the status of the crew as in dispatched or arrived, etc.
         */
        public CrewStatusKind getStatusKind () { return statusKind; }
        public void setStatusKind ( CrewStatusKind statusKind ) { this.statusKind = statusKind; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"statusKind\"")
        private CrewStatusKind statusKind ;
         
        /**
         * Document subject.
         */
        public String getSubject () { return subject; }
        public void setSubject ( String subject ) { this.subject = subject; }
        @Basic()
        @Column(name="\"subject\"")
        private String subject ;
         
        /**
         * Document title.
         */
        public String getTitle () { return title; }
        public void setTitle ( String title ) { this.title = title; }
        @Basic()
        @Column(name="\"title\"")
        private String title ;
         
        /**
         * Utility-specific classification of this document, according to its corporate
         * standards, practices, and existing IT systems (e.g., for management of
         * assets, maintenance, work, outage, customers, etc.).
         */
        public String getType () { return type; }
        public void setType ( String type ) { this.type = type; }
        @Basic()
        @Column(name="\"type\"")
        private String type ;
         
        /**
         * This contains an disclaimers the utility would like to place on the data
         * provided to any stakeholder. This may be different for different stakeholders.
         * This should possibly be an attribute under the Organization class but it
         * is placed here for now.
         */
        public String getUtilityDisclaimer () { return utilityDisclaimer; }
        public void setUtilityDisclaimer ( String utilityDisclaimer ) { this.utilityDisclaimer = utilityDisclaimer; }
        @Basic()
        @Column(name="\"utilityDisclaimer\"")
        private String utilityDisclaimer ;
         
        /**
         * Actual outage period; end of the period corresponds to the actual restoration
         * time.
         */
        public DateTimeInterval getActualPeriod () { return actualPeriod; }
        public void setActualPeriod ( DateTimeInterval actualPeriod ) { this.actualPeriod = actualPeriod; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"actualPeriod\"")
        private DateTimeInterval actualPeriod ;
         
        /**
         * Estimated outage period for a planned outage. The start of the period is
         * the start of the planned outage and the end of the period corresponds to
         * the end of the planned outage.
         */
        public DateTimeInterval getEstimatedPeriod () { return estimatedPeriod; }
        public void setEstimatedPeriod ( DateTimeInterval estimatedPeriod ) { this.estimatedPeriod = estimatedPeriod; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"estimatedPeriod\"")
        private DateTimeInterval estimatedPeriod ;
         
    }
    /**
     * Date and time for which status 'value' applies.
     */
    public String getDateTime () { return dateTime; }
    public void setDateTime ( String dateTime ) { this.dateTime = dateTime; }
    @Basic()
    @Column(name="\"dateTime\"")
    private String dateTime ;
     
    /**
     * Reason code or explanation for why an object went to the current status
     * 'value'.
     */
    public String getReason () { return reason; }
    public void setReason ( String reason ) { this.reason = reason; }
    @Basic()
    @Column(name="\"reason\"")
    private String reason ;
     
    /**
     * Pertinent information regarding the current 'value', as free form text.
     */
    public String getRemark () { return remark; }
    public void setRemark ( String remark ) { this.remark = remark; }
    @Basic()
    @Column(name="\"remark\"")
    private String remark ;
     
    /**
     * Status value at 'dateTime'; prior status changes may have been kept in
     * instances of activity records associated with the object to which this
     * status applies.
     */
    public String getValue () { return value; }
    public void setValue ( String value ) { this.value = value; }
    @Basic()
    @Column(name="\"value\"")
    private String value ;
     
    /**
     * Asset used to perform work.
     */
    @Entity
    @Table(name="\"WorkAsset\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class WorkAsset
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * The aliasName is free text human readable name of the object alternative
         * to IdentifiedObject.name. It may be non unique and may not correlate to
         * a naming hierarchy.
         * The attribute aliasName is retained because of backwards compatibility
         * between CIM relases. It is however recommended to replace aliasName with
         * the Name class as aliasName is planned for retirement at a future time.
         */
        public String getAliasName () { return aliasName; }
        public void setAliasName ( String aliasName ) { this.aliasName = aliasName; }
        @Basic()
        @Column(name="\"aliasName\"")
        private String aliasName ;
         
        /**
         * The description is a free human readable text describing or naming the
         * object. It may be non unique and may not correlate to a naming hierarchy.
         */
        public String getDescription () { return description; }
        public void setDescription ( String description ) { this.description = description; }
        @Basic()
        @Column(name="\"description\"")
        private String description ;
         
        /**
         * The name is any free human readable and possibly non unique text naming
         * the object.
         */
        public String getName () { return name; }
        public void setName ( String name ) { this.name = name; }
        @Basic()
        @Column(name="\"name\"")
        private String name ;
         
        /**
         */
        public CUWorkEquipmentItem getCUWorkEquipmentAsset () { return cUWorkEquipmentAsset; }
        public void setCUWorkEquipmentAsset ( CUWorkEquipmentItem cUWorkEquipmentAsset ) { this.cUWorkEquipmentAsset = cUWorkEquipmentAsset; }
        @ManyToOne(fetch=FetchType.LAZY)
        @JoinColumn(name="\"CUWorkEquipmentAsset\"")
        private CUWorkEquipmentItem cUWorkEquipmentAsset ;
         
    }
    /**
     */
    @Entity
    @Table(name="\"WorkOrder\"")
    @Inheritance(strategy=InheritanceType.JOINED)
    public static class WorkOrder
    {
        public String getMRID () { return mRID; }
        public void setMRID ( String mRID ) { this.mRID = mRID; }
        @Id
        @Column(name="\"mRID\"")
        private String mRID ;
         
        /**
         * The aliasName is free text human readable name of the object alternative
         * to IdentifiedObject.name. It may be non unique and may not correlate to
         * a naming hierarchy.
         * The attribute aliasName is retained because of backwards compatibility
         * between CIM relases. It is however recommended to replace aliasName with
         * the Name class as aliasName is planned for retirement at a future time.
         */
        public String getAliasName () { return aliasName; }
        public void setAliasName ( String aliasName ) { this.aliasName = aliasName; }
        @Basic()
        @Column(name="\"aliasName\"")
        private String aliasName ;
         
        /**
         * Name of the author of this document.
         */
        public String getAuthorName () { return authorName; }
        public void setAuthorName ( String authorName ) { this.authorName = authorName; }
        @Basic()
        @Column(name="\"authorName\"")
        private String authorName ;
         
        /**
         * Free text comment.
         */
        public String getComment () { return comment; }
        public void setComment ( String comment ) { this.comment = comment; }
        @Basic()
        @Column(name="\"comment\"")
        private String comment ;
         
        /**
         * Date and time that this document was created.
         */
        public String getCreatedDateTime () { return createdDateTime; }
        public void setCreatedDateTime ( String createdDateTime ) { this.createdDateTime = createdDateTime; }
        @Basic()
        @Column(name="\"createdDateTime\"")
        private String createdDateTime ;
         
        /**
         * The description is a free human readable text describing or naming the
         * object. It may be non unique and may not correlate to a naming hierarchy.
         */
        public String getDescription () { return description; }
        public void setDescription ( String description ) { this.description = description; }
        @Basic()
        @Column(name="\"description\"")
        private String description ;
         
        /**
         * Date and time this document was last modified. Documents may potentially
         * be modified many times during their lifetime.
         */
        public String getLastModifiedDateTime () { return lastModifiedDateTime; }
        public void setLastModifiedDateTime ( String lastModifiedDateTime ) { this.lastModifiedDateTime = lastModifiedDateTime; }
        @Basic()
        @Column(name="\"lastModifiedDateTime\"")
        private String lastModifiedDateTime ;
         
        /**
         * The name is any free human readable and possibly non unique text naming
         * the object.
         */
        public String getName () { return name; }
        public void setName ( String name ) { this.name = name; }
        @Basic()
        @Column(name="\"name\"")
        private String name ;
         
        /**
         * Revision number for this document.
         */
        public String getRevisionNumber () { return revisionNumber; }
        public void setRevisionNumber ( String revisionNumber ) { this.revisionNumber = revisionNumber; }
        @Basic()
        @Column(name="\"revisionNumber\"")
        private String revisionNumber ;
         
        /**
         * Document subject.
         */
        public String getSubject () { return subject; }
        public void setSubject ( String subject ) { this.subject = subject; }
        @Basic()
        @Column(name="\"subject\"")
        private String subject ;
         
        /**
         * Document title.
         */
        public String getTitle () { return title; }
        public void setTitle ( String title ) { this.title = title; }
        @Basic()
        @Column(name="\"title\"")
        private String title ;
         
        /**
         * Utility-specific classification of this document, according to its corporate
         * standards, practices, and existing IT systems (e.g., for management of
         * assets, maintenance, work, outage, customers, etc.).
         */
        public String getType () { return type; }
        public void setType ( String type ) { this.type = type; }
        @Basic()
        @Column(name="\"type\"")
        private String type ;
         
    }
     
    public static final Class[] allClasses = new Class[]
    {
        ActivityRecord.class,
        CUWorkEquipmentItem.class,
        OutageOrder.class,
        OutagePlan.class,
        PlannedOutage.class,
        WorkAsset.class,
        WorkOrder.class
    };
}
